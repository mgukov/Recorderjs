var AudioRecorder=function(e){var t=this;if(!AudioRecorder.isRecordingSupported())throw new Error("Recording is not supported in this browser");this.state="inactive",this.eventTarget=document.createDocumentFragment(),this.audioContext=new AudioContext,this.monitorNode=this.audioContext.createGain(),this.config=e=e||{},this.config.bufferLength=e.bufferLength||1024,this.config.monitorGain=e.monitorGain||0,this.config.numberOfChannels=e.numberOfChannels||1,this.config.originalSampleRate=this.audioContext.sampleRate,this.config.encoderSampleRate=e.encoderSampleRate||48e3,this.config.encoderPath=e.encoderPath||"encoder.min.js",this.config.leaveStreamOpen=!1!==e.leaveStreamOpen,this.config.maxBuffersPerPage=e.maxBuffersPerPage||1,this.config.encoderApplication=e.encoderApplication||2049,this.config.encoderFrameSize=e.encoderFrameSize||60,this.config.resampleQuality=e.resampleQuality||3,this.config.streamOptions=e.streamOptions||{optional:[],mandatory:{googEchoCancellation:!1,googAutoGainControl:!1,googNoiseSuppression:!1,googHighpassFilter:!1}},this.setMonitorGain(this.config.monitorGain),this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.config.bufferLength,this.config.numberOfChannels,this.config.numberOfChannels),this.scriptProcessorNode.onaudioprocess=function(e){t.encodeBuffers(e.inputBuffer)},this.listenersSet=!1,this.setupListeners()};AudioRecorder.isRecordingSupported=function(){return"undefined"!=typeof AudioContext&&navigator&&(navigator.getUserMedia||navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)},AudioRecorder.prototype.setupListeners=function(){if(!this.listenersSet){this.listenersSet=!0;var e=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},t=this;["start","stop","pause","resume","streamError","streamReady","dataAvailable"].forEach(function(i){t.addEventListener(i,function(o){var n="on"+e(i),r=t[n];r&&"function"==typeof r&&r(o)})})}},AudioRecorder.prototype.addEventListener=function(e,t,i){this.eventTarget.addEventListener(e,t,i)},AudioRecorder.prototype.clearStream=function(){this.stream&&(this.stream.getTracks?this.stream.getTracks().forEach(function(e){e.stop()}):this.stream.stop(),delete this.stream)},AudioRecorder.prototype.encodeBuffers=function(e){if("recording"===this.state){for(var t=[],i=0;i<e.numberOfChannels;i++)t[i]=e.getChannelData(i);this.encoder.encode(t)}},AudioRecorder.prototype.initStream=function(){var e=this,t=function(t){return e.stream=t,e.sourceNode=e.audioContext.createMediaStreamSource(t),e.sourceNode.connect(e.scriptProcessorNode),e.sourceNode.connect(e.monitorNode),e.eventTarget.dispatchEvent(new Event("streamReady")),t},i=function(t){e.eventTarget.dispatchEvent(new ErrorEvent("streamError",{error:t}))},o={audio:this.config.streamOptions};return this.stream?(this.eventTarget.dispatchEvent(new Event("streamReady")),Promise.resolve(this.stream)):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia(o).then(t,i):navigator.getUserMedia?new Promise(function(e,t){navigator.getUserMedia(o,e,t)}).then(t,i):void 0},AudioRecorder.prototype.pause=function(){"recording"===this.state&&(this.state="paused",this.eventTarget.dispatchEvent(new Event("pause")))},AudioRecorder.prototype.removeEventListener=function(e,t,i){this.eventTarget.removeEventListener(e,t,i)},AudioRecorder.prototype.resume=function(){"paused"===this.state&&(this.state="recording",this.eventTarget.dispatchEvent(new Event("resume")))},AudioRecorder.prototype.setMonitorGain=function(e){this.monitorNode.gain.value=e},AudioRecorder.prototype.start=function(){if("inactive"===this.state&&this.stream){var e=this;this.encoder=new OpusEncoder(this.config),this.encoder.onPackageEncoded(function(t){e.streamPage(t)}),this.encodeBuffers=function(){delete this.encodeBuffers},this.state="recording",this.monitorNode.connect(this.audioContext.destination),this.scriptProcessorNode.connect(this.audioContext.destination),this.eventTarget.dispatchEvent(new Event("start"))}},AudioRecorder.prototype.stop=function(){"inactive"!==this.state&&(this.state="inactive",this.monitorNode.disconnect(),this.scriptProcessorNode.disconnect(),this.config.leaveStreamOpen||this.clearStream(),this.encoder.done())},AudioRecorder.prototype.streamPage=function(e){null===e?this.eventTarget.dispatchEvent(new Event("stop")):this.eventTarget.dispatchEvent(new CustomEvent("dataAvailable",{detail:e}))},"undefined"!=typeof module&&(module.exports=AudioRecorder);